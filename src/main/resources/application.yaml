# Default Setting
server:
  port: 8081
  error:
    include-exception: false      # Response 에 Exception 을 표시할지
    include-message: always       # Response 에 Exception Message 를 표시할지 (never | always | on_param)
    include-stacktrace: on_param  # Response 에 Stack Trace 를 표시할지 (never | always | on_param) on_trace_params 은 deprecated
    whitelabel.enabled: true      # 에러 발생 시 Spring 기본 에러 페이지 노출 여부

#logging:
#  level:
#    org.springframework.web : debug
#    sql: error
#    jdbc: off
#    jdbc.sqlonly: debug

# NoSQL DB Setting
spring:
  data:
    mongodb:
      host: localhost
      port: 27018
      authentication-database: admin
      database: mongodb_tutorial
      username: root
      password: root
  kafka:
    bootstrap-servers:
      - 127.0.0.1:9092
    consumer:
      # consumer bootstrap servers가 따로 존재하면 설정
      # bootstrap-servers: 192.168.0.4:9092

      # 식별 가능한 Consumer Group Id
      group-id: testgroup
      # Kafka 서버에 초기 offset이 없거나, 서버에 현재 offset이 더 이상 존재하지 않을 경우 수행할 작업을 설정
      # latest: 가장 최근에 생산된 메시지로 offeset reset
      # earliest: 가장 오래된 메시지로 offeset reset
      # none: offset 정보가 없으면 Exception 발생
      auto-offset-reset: earliest
      # 데이터를 받아올 때, key/value를 역직렬화
      # JSON 데이터를 받아올 것이라면 JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # producer bootstrap servers가 따로 존재하면 설정
      # bootstrap-servers: 3.34.97.97:9092

      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

message:
  topic:
    name: test-topic

# Security
springbootjjwt:
  password:
    secret: mysecret
    iteration: 33
    keylength: 256
  jjwt:
    secret: ThisIsSecretForJWTHS512SignatureAlgorithmThatMUSTHave64ByteLength
    expiration: 28800
